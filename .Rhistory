q()
# Install packages (if not already installed)
if (!requireNamespace("ape", quietly = TRUE)) install.packages("ape")
if (!requireNamespace("phangorn", quietly = TRUE)) install.packages("phangorn")
library(ape)
library(phangorn)
file_path <- "C:/Users/gavin/Downloads/cervidae_aligned_clustal.fasta"
alignment <- read.dna(file_path, format = "fasta")
print(alignment)
dist_matrix <- dist.dna(alignment, model = "K80")
nj_tree <- nj(dist_matrix)
nj_tree <- njs(dist_matrix)
dist_matrix <- dist.dna(alignment, model = "K80", pairwise.deletion = TRUE)
nj_tree <- nj(dist_matrix)
num_missing <- sum(is.na(alignment))
print(num_missing)
print(any(is.na(dist_matrix)))
dist_matrix_raw <- dist.dna(alignment, model = "raw")
print(any(is.na(dist_matrix_raw)))
nj_tree <- nj(dist_matrix_raw)
dist_matrix_raw <- dist.dna(alignment, model = "raw", pairwise.deletion = TRUE)
print(any(is.na(dist_matrix_raw)))
nj_tree <- nj(dist_matrix_raw)
nj_tree <- njs(dist_matrix_raw)
plot(nj_tree, main = "Distance-Based Tree (Neighbor-Joining) with Pairwise Deletion")
phy_data <- phyDat(alignment, type = "DNA")
starting_tree <- nj_tree
parsimony_tree <- optim.parsimony(starting_tree, phy_data)
plot(parsimony_tree, main = "Parsimony-Based Tree")
# Save an enhanced NJ tree plot to a PDF file
pdf("nj_tree_better.pdf", width = 10, height = 8)
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",    # Options: "phylogram", "cladogram", "fan", etc.
cex = 0.8,             # Adjust label size
font = 2,              # Bold labels
edge.width = 2,        # Thicker branch lines
label.offset = 0.01,   # Space between labels and branches
no.margin = TRUE)      # Reduce extra margins
add.scale.bar(length = 0.05, cex = 0.7)  # Optional: add a scale bar
dev.off()
# Save a larger, enhanced NJ tree plot to a PDF file
pdf("nj_tree_bigger.pdf", width = 15, height = 12)  # Increase width and height for a larger plot
par(mar = c(5, 5, 5, 5))  # Adjust margins if needed
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",  # Options: "phylogram", "cladogram", "fan", etc.
cex = 1.2,           # Increase label size (default is 1)
font = 2,            # Bold labels
edge.width = 2,      # Thicker branch lines
label.offset = 0.02) # Slightly more space between labels and branches
add.scale.bar(length = 0.05, cex = 1)  # Optional: add a scale bar with larger text
dev.off()
pdf("nj_tree_bigger.pdf", width = 15, height = 12)  # Increase width and height for a larger plot
par(mar = c(10, 10, 10, 10))
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",  # Options: "phylogram", "cladogram", "fan", etc.
cex = 1.2,           # Increase label size (default is 1)
font = 2,            # Bold labels
edge.width = 2,      # Thicker branch lines
label.offset = 0.02) # Slightly more space between labels and branches
add.scale.bar(length = 0.05, cex = 1)  # Optional: add a scale bar with larger text
dev.off()
# Save a larger, enhanced NJ tree plot to a PDF file
pdf("nj_tree_bigger.pdf", width = 15, height = 12)  # Increase width and height for a larger plot
par(mar = c(30, 30, 30, 30))  # Adjust margins if needed
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",  # Options: "phylogram", "cladogram", "fan", etc.
cex = 1.2,           # Increase label size (default is 1)
font = 2,            # Bold labels
edge.width = 2,      # Thicker branch lines
label.offset = 0.02) # Slightly more space between labels and branches
# Save a larger, enhanced NJ tree plot to a PDF file
pdf("nj_tree_bigger.pdf", width = 15, height = 12)  # Increase width and height for a larger plot
par(mar = c(25, 25, 25, 25))  # Adjust margins if needed
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",  # Options: "phylogram", "cladogram", "fan", etc.
cex = 1.2,           # Increase label size (default is 1)
font = 2,            # Bold labels
edge.width = 2,      # Thicker branch lines
label.offset = 0.02) # Slightly more space between labels and branches
add.scale.bar(length = 0.05, cex = 1)  # Optional: add a scale bar with larger text
dev.off()
pdf("big_tree_plot.pdf", width = 20, height = 20)  # Make the plot area bigger
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",   # or "fan", "unrooted", etc.
cex = 0.8,            # Decrease text size if overlapping
edge.width = 2,
label.offset = 0.02,  # More space between branch tips and labels
no.margin = TRUE)
dev.off()
pdf("fan_tree_plot.pdf", width = 20, height = 20)
plot(nj_tree,
main = "Fan Layout Tree",
type = "fan",         # "unrooted", "cladogram", "radial" also possible
cex = 0.8,
edge.width = 2,
label.offset = 0.02,
no.margin = TRUE)
dev.off()
plot(nj_tree, main = "Distance-Based Tree (Neighbor-Joining)")
# Example: Save a larger plot to PDF
pdf("nj_tree_large.pdf", width = 15, height = 12)  # Increase width/height as needed
# Increase margins to ensure labels arenâ€™t cut off (bottom, left, top, right)
par(mar = c(5, 5, 5, 5))
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",    # or "fan", "unrooted", etc.
cex = 0.8,             # Decrease or increase label size
edge.width = 2,
label.offset = 0.02,   # Push labels further from the tips
no.margin = FALSE      # Set to TRUE if you want to remove extra space entirely
)
dev.off()
pdf("nj_tree_xlim.pdf", width = 15, height = 12)
par(mar = c(5, 5, 5, 5))
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",
cex = 0.8,
edge.width = 2,
label.offset = 0.02,
x.lim = c(0, 5)  # Adjust this upper limit until labels fit
)
dev.off()
plot(nj_tree,
main = "Distance-Based Tree (Fan Layout)",
type = "fan",
cex = 0.8,
edge.width = 2,
label.offset = 0.02
)
plot(nj_tree,
main = "Distance-Based Tree (radial)",
type = "radial",
cex = 0.8,
edge.width = 2,
label.offset = 0.02
)
pdf("nj_tree_xlim.pdf", width = 15, height = 12)
par(mar = c(5, 5, 5, 5))
plot(nj_tree,
main = "Distance-Based Tree (Neighbor-Joining)",
type = "phylogram",
cex = 0.8,
edge.width = 2,
label.offset = 0.02,
x.lim = c(0, 5)  # Adjust this upper limit until labels fit
)
dev.off()
library(ape)
nj_tree_ladder <- ladderize(nj_tree, right = TRUE)
plot(nj_tree_ladder,
main = "Distance-Based Tree (Ladderized)",
type = "phylogram",
cex = 0.8,
edge.width = 2,
label.offset = 0.02
)
# Example: Truncate tip labels to first 10 characters
nj_tree$tip.label <- substr(nj_tree$tip.label, 1, 10)
plot(nj_tree, main = "Tree with Shortened Tip Labels")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
a
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install.packages("BiocManager")  # if needed
BiocManager::install("ggtree")
.libPaths()
# Example: explicitly set the user library as your primary library path
.libPaths("C:/Users/<username>/AppData/Local/R/win-library/4.3")
BiocManager::install("ggtree")
install.packages("somePackage")
# 1. View all tip labels to see which ones need fixing
nj_tree$tip.label
# 2. Identify the indices (or use grep) to rename them
# Suppose "Capreolus" is at index 5, and "tochrom" is at index 6:
nj_tree$tip.label[5] <- "Capreolus_tochrom"
# 3. If "tochrom" is at index 6 and is actually just a fragment, you might remove it
#   or rename it to something else. For example, remove it:
nj_tree$tip.label <- nj_tree$tip.label[-6]
# 4. Plot the tree again
plot(nj_tree, main = "Tree with Merged Labels")
nj_tree$tip.label <- substr(nj_tree$tip.label, 1, 10)
setwd("C:/Users/gavin/Downloads/Botany563/myProject")
library(ape)
library(phangorn)
dna_sequences <- read.dna("data.fasta", format = "fasta")
dna_sequences <- read.dna("cervidae.fasta", format = "fasta")
dna_phy <- phyDat(dna_sequences, type = "DNA")
dna_dist <- dist.dna(dna_sequences)
tree_nj <- njs(dna_dist)
tree_nj <- nj(dna_dist)
dna_sequences <- read.dna("Cervidae Fasta.fasta", format = "fasta")
dna_phy <- phyDat(dna_sequences, type = "DNA")
tree_nj <- njs(dna_dist)
